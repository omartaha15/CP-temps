struct point2d {
    int x, y;
    point2d() {}
    point2d(int x, int y): x(x), y(y) {}
    point2d& operator+=(const point2d &t) {
        x += t.x;
        y += t.y;
        return *this;
    }
    point2d& operator-=(const point2d &t) {
        x -= t.x;
        y -= t.y;
        return *this;
    }
    point2d& operator*=(int t) {
        x *= t;
        y *= t;
        return *this;
    }
    point2d& operator/=(int t) {
        x /= t;
        y /= t;
        return *this;
    }
    point2d operator+(const point2d &t) const {
        return point2d(*this) += t;
    }
    point2d operator-(const point2d &t) const {
        return point2d(*this) -= t;
    }
    point2d operator*(int t) const {
        return point2d(*this) *= t;
    }
    point2d operator/(int t) const {
        return point2d(*this) /= t;
    }
};
point2d operator*(int a, point2d b) {
    return b * a;
}